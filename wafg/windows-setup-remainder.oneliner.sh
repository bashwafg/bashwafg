windows-setup-remainder() { local PagePath="" PageSize="" Restart="" UpgradeData="" UseConfigurationSet="" LogPath="" EnableNetwork="" EnableFirewall="" DynamicUpdate="" HorizontalResolution="" VerticalResolution="" ColorDepth="" RefreshRate=""; while [[ $# -gt 0 ]]; do case "$1" in PagePath|PageSize|Restart|UpgradeData|UseConfigurationSet|LogPath|EnableNetwork|EnableFirewall|DynamicUpdate|HorizontalResolution|VerticalResolution|ColorDepth|RefreshRate) eval "$1=\$2"; shift 2 ;; *) echo "Unknown parameter: $1" >&2; return 1 ;; esac; done; [[ -n "$HorizontalResolution" || -n "$VerticalResolution" || -n "$ColorDepth" || -n "$RefreshRate" ]] && { printf '\t\t\t<Display>\n'; [[ -n "$HorizontalResolution" ]] && printf '\t\t\t\t<HorizontalResolution>%s</HorizontalResolution>\n' "$HorizontalResolution"; [[ -n "$VerticalResolution" ]] && printf '\t\t\t\t<VerticalResolution>%s</VerticalResolution>\n' "$VerticalResolution"; [[ -n "$ColorDepth" ]] && printf '\t\t\t\t<ColorDepth>%s</ColorDepth>\n' "$ColorDepth"; [[ -n "$RefreshRate" ]] && printf '\t\t\t\t<RefreshRate>%s</RefreshRate>\n' "$RefreshRate"; printf '\t\t\t</Display>\n'; }; [[ -n "$DynamicUpdate" ]] && printf '\t\t\t<DynamicUpdate>\n\t\t\t\t<Enable>%s</Enable>\n\t\t\t\t<WillShowUI>Never</WillShowUI>\n\t\t\t</DynamicUpdate>\n' "$DynamicUpdate"; [[ -n "$EnableFirewall" ]] && printf '\t\t\t<EnableFirewall>%s</EnableFirewall>\n' "$EnableFirewall"; [[ -n "$EnableNetwork" ]] && printf '\t\t\t<EnableNetwork>%s</EnableNetwork>\n' "$EnableNetwork"; [[ -n "$LogPath" ]] && printf '\t\t\t<LogPath>%s</LogPath>\n' "$LogPath"; [[ -n "$PagePath" || -n "$PageSize" ]] && { printf '\t\t\t<PageFile>\n'; [[ -n "$PagePath" ]] && printf '\t\t\t\t<Path>%s</Path>\n' "$PagePath"; [[ -n "$PageSize" ]] && printf '\t\t\t\t<Size>%s</Size>\n' "$PageSize"; printf '\t\t\t</PageFile>\n'; }; [[ -n "$Restart" ]] && printf '\t\t\t<Restart>%s</Restart>\n' "$Restart"; [[ -n "$UpgradeData" ]] && printf '\t\t\t<UpgradeData>\n\t\t\t\t<Upgrade>%s</Upgrade>\n\t\t\t\t<WillShowUI>Never</WillShowUI>\n\t\t\t</UpgradeData>\n' "$UpgradeData"; }